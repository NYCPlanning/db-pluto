mismatch_sql = '''
INSERT INTO dcp_pluto.qaqc_mismatch (
SELECT
    '{0} - {1}' as pair, 
	{2} as condo,
    count(*) as total,
    count(nullif(a.borough = b.borough, true)) as borough,
    count(nullif(a.block = b.block, true)) as block,
    count(nullif(a.lot = b.lot, true)) as lot,
    count(nullif(a.cd = b.cd, true)) as cd,
    count(nullif(a.ct2010 = b.ct2010, true)) as ct2010,
    count(nullif(a.cb2010 = b.cb2010, true)) as cb2010,
    count(nullif(a.schooldist = b.schooldist, true)) as schooldist,
    count(nullif(a.council = b.council, true)) as council,
    count(nullif(a.zipcode = b.zipcode, true)) as zipcode,
    count(nullif(a.firecomp = b.firecomp, true)) as firecomp,
    count(nullif(a.policeprct = b.policeprct, true)) as policeprct,
    count(nullif(a.healtharea = b.healtharea, true)) as healtharea,
    count(nullif(a.sanitboro = b.sanitboro, true)) as sanitboro,
    count(nullif(a.sanitsub = b.sanitsub, true)) as sanitsub,
    count(nullif(trim(a.address) = trim(b.address), true)) as address,
    count(nullif(a.zonedist1 = b.zonedist1, true)) as zonedist1,
    count(nullif(a.zonedist2 = b.zonedist2, true)) as zonedist2,
    count(nullif(a.zonedist3 = b.zonedist3, true)) as zonedist3,
    count(nullif(a.zonedist4 = b.zonedist4, true)) as zonedist4,
    count(nullif(a.overlay1 = b.overlay1, true)) as overlay1,
    count(nullif(a.overlay2 = b.overlay2, true)) as overlay2,
    count(nullif(a.spdist1 = b.spdist1, true)) as spdist1,
    count(nullif(a.spdist2 = b.spdist2, true)) as spdist2,
    count(nullif(a.spdist3 = b.spdist3, true)) as spdist3,
    count(nullif(a.ltdheight = b.ltdheight, true)) as ltdheight,
    count(nullif(a.splitzone = b.splitzone, true)) as splitzone,
    count(nullif(a.bldgclass = b.bldgclass, true)) as bldgclass,
    count(nullif(a.landuse = b.landuse, true)) as landuse,
    count(nullif(a.easements = b.easements, true)) as easements,
    count(nullif(a.ownertype = b.ownertype, true)) as ownertype,
    count(nullif(a.ownername = b.ownername, true)) as ownername,
    count(nullif(abs(a.lotarea::numeric-b.lotarea::numeric) <5, true)) as lotarea,
    count(nullif(abs(a.bldgarea::numeric-b.bldgarea::numeric) <5, true)) as bldgarea,
    count(nullif(abs(a.comarea::numeric-b.comarea::numeric) <5, true)) as comarea,
    count(nullif(abs(a.resarea::numeric-b.resarea::numeric) <5, true)) as resarea,
    count(nullif(abs(a.officearea::numeric-b.officearea::numeric) <5, true)) as officearea,
    count(nullif(abs(a.retailarea::numeric-b.retailarea::numeric) <5, true)) as retailarea,
    count(nullif(abs(a.garagearea::numeric-b.garagearea::numeric) <5, true)) as garagearea,
    count(nullif(abs(a.strgearea::numeric-b.strgearea::numeric) <5, true)) as strgearea,
    count(nullif(abs(a.factryarea::numeric-b.factryarea::numeric) <5, true)) as factryarea,
    count(nullif(abs(a.otherarea::numeric-b.otherarea::numeric) <5, true)) as otherarea,
    count(nullif(a.areasource = b.areasource, true)) as areasource,
    count(nullif(a.numbldgs = b.numbldgs, true)) as numbldgs,
    count(nullif(a.numfloors = b.numfloors, true)) as numfloors,
    count(nullif(a.unitsres = b.unitsres, true)) as unitsres,
    count(nullif(a.unitstotal = b.unitstotal, true)) as unitstotal,
    count(nullif(abs(a.lotfront::numeric-b.lotfront::numeric) <5, true)) as lotfront,
    count(nullif(abs(a.lotdepth::numeric-b.lotdepth::numeric) <5, true)) as lotdepth,
    count(nullif(abs(a.bldgfront::numeric-b.bldgfront::numeric) <5, true)) as bldgfront,
    count(nullif(abs(a.bldgdepth::numeric-b.bldgdepth::numeric) <5, true)) as bldgdepth,
    count(nullif(a.ext = b.ext, true)) as ext,
    count(nullif(a.proxcode = b.proxcode, true)) as proxcode,
    count(nullif(a.irrlotcode = b.irrlotcode, true)) as irrlotcode,
    count(nullif(a.lottype = b.lottype, true)) as lottype,
    count(nullif(a.bsmtcode = b.bsmtcode, true)) as bsmtcode,
    count(nullif(abs(a.assessland::numeric-b.assessland::numeric) <10, true)) as assessland,
    count(nullif(abs(a.assesstot::numeric-b.assesstot::numeric) <10, true)) as assesstot,
    count(nullif(abs(a.exempttot::numeric-b.exempttot::numeric) <10, true)) as exempttot,
    count(nullif(a.yearbuilt = b.yearbuilt, true)) as yearbuilt,
    count(nullif(a.yearalter1 = b.yearalter1, true)) as yearalter1,
    count(nullif(a.yearalter2 = b.yearalter2, true)) as yearalter2,
    count(nullif(a.histdist = b.histdist, true)) as histdist,
    count(nullif(a.landmark = b.landmark, true)) as landmark,
    count(nullif(a.builtfar = b.builtfar, true)) as builtfar,
    count(nullif(a.residfar = b.residfar, true)) as residfar,
    count(nullif(a.commfar = b.commfar, true)) as commfar,
    count(nullif(a.facilfar = b.facilfar, true)) as facilfar,
    count(nullif(a.borocode = b.borocode, true)) as borocode,
    count(nullif(a.bbl = b.bbl, true)) as bbl,
    count(nullif(a.condono = b.condono, true)) as condono,
    count(nullif(a.tract2010 = b.tract2010, true)) as tract2010,
    count(nullif(a.xcoord::text = b.xcoord::text, true)) as xcoord,
    count(nullif(a.ycoord::text = b.ycoord::text, true)) as ycoord,
    count(nullif(a.zonemap = b.zonemap, true)) as zonemap,
    count(nullif(a.zmcode = b.zmcode, true)) as zmcode,
    count(nullif(a.sanborn = b.sanborn, true)) as sanborn,
    count(nullif(a.taxmap = b.taxmap, true)) as taxmap,
    count(nullif(a.edesignum = b.edesignum, true)) as edesignum,
    count(nullif(a.appbbl = b.appbbl, true)) as appbbl,
    count(nullif(a.appdate = b.appdate, true)) as appdate,
    count(nullif(a.plutomapid = b.plutomapid, true)) as plutomapid,
    count(nullif(a.sanitdistrict = b.sanitdistrict, true)) as sanitdistrict,
    count(nullif(a.healthcenterdistrict = b.healthcenterdistrict, true)) as healthcenterdistrict,
    count(nullif(a.firm07_flag = b.firm07_flag, true)) as firm07_flag,
    count(nullif(a.pfirm15_flag = b.pfirm15_flag, true)) as pfirm15_flag,
    count(nullif(a.rpaddate = b.rpaddate, true)) as rpaddate,
    count(nullif(a.dcasdate = b.dcasdate, true)) as dcasdate,
    count(nullif(a.zoningdate = b.zoningdate, true)) as zoningdate,
    count(nullif(a.landmkdate = b.landmkdate, true)) as landmkdate,
    count(nullif(a.basempdate = b.basempdate, true)) as basempdate,
    count(nullif(a.masdate = b.masdate, true)) as masdate,
    count(nullif(a.polidate = b.polidate, true)) as polidate,
    count(nullif(a.edesigdate = b.edesigdate, true)) as edesigdate
    FROM dcp_pluto."{0}" a
INNER JOIN dcp_pluto."{1}" b
USING (bbl)
{3})
'''

null_sql = '''
INSERT INTO dcp_pluto.qaqc_null (
SELECT
    '{0}' as v, 
	{1} as condo,
    count(*) as total,
    sum(case when a.borough is null then 1 else 0 end) as borough,
    sum(case when a.block is null then 1 else 0 end) as block,
    sum(case when a.lot is null then 1 else 0 end) as lot,
    sum(case when a.cd is null then 1 else 0 end) as cd,
    sum(case when a.ct2010 is null then 1 else 0 end) as ct2010,
    sum(case when a.cb2010 is null then 1 else 0 end) as cb2010,
    sum(case when a.schooldist is null then 1 else 0 end) as schooldist,
    sum(case when a.council is null then 1 else 0 end) as council,
    sum(case when a.zipcode is null then 1 else 0 end) as zipcode,
    sum(case when a.firecomp is null then 1 else 0 end) as firecomp,
    sum(case when a.policeprct is null then 1 else 0 end) as policeprct,
    sum(case when a.healtharea is null then 1 else 0 end) as healtharea,
    sum(case when a.sanitboro is null then 1 else 0 end) as sanitboro,
    sum(case when a.sanitsub is null then 1 else 0 end) as sanitsub,
    sum(case when a.address is null then 1 else 0 end) as address,
    sum(case when a.zonedist1 is null then 1 else 0 end) as zonedist1,
    sum(case when a.zonedist2 is null then 1 else 0 end) as zonedist2,
    sum(case when a.zonedist3 is null then 1 else 0 end) as zonedist3,
    sum(case when a.zonedist4 is null then 1 else 0 end) as zonedist4,
    sum(case when a.overlay1 is null then 1 else 0 end) as overlay1,
    sum(case when a.overlay2 is null then 1 else 0 end) as overlay2,
    sum(case when a.spdist1 is null then 1 else 0 end) as spdist1,
    sum(case when a.spdist2 is null then 1 else 0 end) as spdist2,
    sum(case when a.spdist3 is null then 1 else 0 end) as spdist3,
    sum(case when a.ltdheight is null then 1 else 0 end) as ltdheight,
    sum(case when a.splitzone is null then 1 else 0 end) as splitzone,
    sum(case when a.bldgclass is null then 1 else 0 end) as bldgclass,
    sum(case when a.landuse is null then 1 else 0 end) as landuse,
    sum(case when a.easements is null then 1 else 0 end) as easements,
    sum(case when a.ownertype is null then 1 else 0 end) as ownertype,
    sum(case when a.ownername is null then 1 else 0 end) as ownername,
    sum(case when a.lotarea is null then 1 else 0 end) as lotarea,
    sum(case when a.bldgarea is null then 1 else 0 end) as bldgarea,
    sum(case when a.comarea is null then 1 else 0 end) as comarea,
    sum(case when a.resarea is null then 1 else 0 end) as resarea,
    sum(case when a.officearea is null then 1 else 0 end) as officearea,
    sum(case when a.retailarea is null then 1 else 0 end) as retailarea,
    sum(case when a.garagearea is null then 1 else 0 end) as garagearea,
    sum(case when a.strgearea is null then 1 else 0 end) as strgearea,
    sum(case when a.factryarea is null then 1 else 0 end) as factryarea,
    sum(case when a.otherarea is null then 1 else 0 end) as otherarea,
    sum(case when a.areasource is null then 1 else 0 end) as areasource,
    sum(case when a.numbldgs is null then 1 else 0 end) as numbldgs,
    sum(case when a.numfloors is null then 1 else 0 end) as numfloors,
    sum(case when a.unitsres is null then 1 else 0 end) as unitsres,
    sum(case when a.unitstotal is null then 1 else 0 end) as unitstotal,
    sum(case when a.lotfront is null then 1 else 0 end) as lotfront,
    sum(case when a.lotdepth is null then 1 else 0 end) as lotdepth,
    sum(case when a.bldgfront is null then 1 else 0 end) as bldgfront,
    sum(case when a.bldgdepth is null then 1 else 0 end) as bldgdepth,
    sum(case when a.ext is null then 1 else 0 end) as ext,
    sum(case when a.proxcode is null then 1 else 0 end) as proxcode,
    sum(case when a.irrlotcode is null then 1 else 0 end) as irrlotcode,
    sum(case when a.lottype is null then 1 else 0 end) as lottype,
    sum(case when a.bsmtcode is null then 1 else 0 end) as bsmtcode,
    sum(case when a.assessland is null then 1 else 0 end) as assessland,
    sum(case when a.assesstot is null then 1 else 0 end) as assesstot,
    sum(case when a.exempttot is null then 1 else 0 end) as exempttot,
    sum(case when a.yearbuilt is null then 1 else 0 end) as yearbuilt,
    sum(case when a.yearalter1 is null then 1 else 0 end) as yearalter1,
    sum(case when a.yearalter2 is null then 1 else 0 end) as yearalter2,
    sum(case when a.histdist is null then 1 else 0 end) as histdist,
    sum(case when a.landmark is null then 1 else 0 end) as landmark,
    sum(case when a.builtfar is null then 1 else 0 end) as builtfar,
    sum(case when a.residfar is null then 1 else 0 end) as residfar,
    sum(case when a.commfar is null then 1 else 0 end) as commfar,
    sum(case when a.facilfar is null then 1 else 0 end) as facilfar,
    sum(case when a.borocode is null then 1 else 0 end) as borocode,
    sum(case when a.bbl is null then 1 else 0 end) as bbl,
    sum(case when a.condono is null then 1 else 0 end) as condono,
    sum(case when a.tract2010 is null then 1 else 0 end) as tract2010,
    sum(case when a.xcoord is null then 1 else 0 end) as xcoord,
    sum(case when a.ycoord is null then 1 else 0 end) as ycoord,
    sum(case when a.zonemap is null then 1 else 0 end) as zonemap,
    sum(case when a.zmcode is null then 1 else 0 end) as zmcode,
    sum(case when a.sanborn is null then 1 else 0 end) as sanborn,
    sum(case when a.taxmap is null then 1 else 0 end) as taxmap,
    sum(case when a.edesignum is null then 1 else 0 end) as edesignum,
    sum(case when a.appbbl is null then 1 else 0 end) as appbbl,
    sum(case when a.appdate is null then 1 else 0 end) as appdate,
    sum(case when a.plutomapid is null then 1 else 0 end) as plutomapid,
    sum(case when a.version is null then 1 else 0 end) as version,
    sum(case when a.sanitdistrict is null then 1 else 0 end) as sanitdistrict,
    sum(case when a.healthcenterdistrict is null then 1 else 0 end) as healthcenterdistrict,
    sum(case when a.firm07_flag is null then 1 else 0 end) as firm07_flag,
    sum(case when a.pfirm15_flag is null then 1 else 0 end) as pfirm15_flag,
    sum(case when a.rpaddate is null then 1 else 0 end) as rpaddate,
    sum(case when a.dcasdate is null then 1 else 0 end) as dcasdate,
    sum(case when a.zoningdate is null then 1 else 0 end) as zoningdate,
    sum(case when a.landmkdate is null then 1 else 0 end) as landmkdate,
    sum(case when a.basempdate is null then 1 else 0 end) as basempdate,
    sum(case when a.masdate is null then 1 else 0 end) as masdate,
    sum(case when a.polidate is null then 1 else 0 end) as polidate,
    sum(case when a.edesigdate is null then 1 else 0 end) as edesigdate
FROM dcp_pluto."{0}" a
{2})
'''

aggregate_sql = '''
INSERT INTO dcp_pluto.qaqc_aggregate (
SELECT  '{0}' as v, 
	    {1} as condo,
        sum(UnitsRes::numeric)::bigint as UnitsRes,
        sum(LotArea::numeric)::bigint as LotArea,
        sum(BldgArea::numeric)::bigint as BldgArea,
        sum(ComArea::numeric)::bigint as ComArea,
        sum(ResArea::numeric)::bigint as ResArea,
        sum(OfficeArea::numeric)::bigint as OfficeArea,
        sum(RetailArea::numeric)::bigint as RetailArea,
        sum(GarageArea::numeric)::bigint as GarageArea,
        sum(StrgeArea::numeric)::bigint as StrgeArea,
        sum(FactryArea::numeric)::bigint as FactryArea,
        sum(OtherArea::numeric)::bigint as OtherArea,
        sum(AssessLand::numeric)::bigint as AssessLand,
        sum(AssessTot::numeric)::bigint as AssessTot,
        sum(ExemptTot::numeric)::bigint as ExemptTot,
        sum(FIRM07_FLAG::numeric)::bigint as FIRM07_FLAG,
        sum(PFIRM15_FLAG::numeric)::bigint as PFIRM15_FLAG
FROM dcp_pluto."{0}"
{2})
'''