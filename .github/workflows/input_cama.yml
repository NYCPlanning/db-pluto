name: CAMA Processing

on:
  issues:
    types: [opened, edited]

jobs:
  process_cama:
    if: >-
      (
        contains(github.event.issue.title, '[cama]') && 
        ( 
          github.event.issue.author_association == 'CONTRIBUTOR' || 
          github.event.issue.author_association == 'MEMBER' 
        )
      )
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgis/postgis:12-3.0-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      RECIPE_ENGINE: postgresql://postgres:postgres@localhost:5432/postgres
      AWS_S3_ENDPOINT: ${{ secrets.DO_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: edm-recipes
      SSH_PRIVATE_KEY_GINGER: ${{ secrets.SSH_PRIVATE_KEY_GINGER }}
      GINGER_USER: ${{ secrets.GINGER_USER }}
      GINGER_HOST: ${{ secrets.GINGER_HOST }}
    steps:
      - uses: actions/checkout@v2
      - name: install ssh key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY_GINGER" > ~/.ssh/ginger
          chmod 600 ~/.ssh/ginger

      - name: install minio ..
        run: |
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/bin/mc
          mc config host add spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4

      - name: process CAMA
        id: processing
        shell: bash
        working-directory: pluto_build
        run: ./pluto import cama

      - uses: NYCPlanning/action-library-archive@v1.1
        id: cama
        with:
          name: pluto_input_cama_dof
          path: pluto_build/templates/pluto_input_cama_dof.yml
          version: ${{ steps.processing.outputs.version }}
          s3: true
          latest: true
          compress: true
          output_format: pgdump csv

      - name: Clean CAMA
        shell: bash
        working-directory: pluto_build
        run: ./pluto clean cama

      - name: Comment on Issue and Close Issue
        if: success() && github.event_name == 'issues'
        uses: peter-evans/close-issue@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## ${{ github.event.issue.title }} Is Successfully Updated! ðŸŽ‰
            
            ### More Info
            for more details, check https://github.com/NYCPlanning/db-pluto/actions/runs/${{ github.run_id }}
          
          reactions: laugh, rocket, hooray
