name: CAMA Processing

on:
  issues:
    types: [opened, edited]

jobs:
  process_cama:
    if: contains(github.event.issue.title, '[cama]') && github.event.issue.author_association == 'MEMBER'
    container:
      image: nycplanning/docker-geosupport:latest
    runs-on: self-hosted
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      MINIO_S3_ENDPOINT: ${{ secrets.MINIO_S3_ENDPOINT }}
      MINIO_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY_ID }}
      MINIO_SECRET_ACCESS_KEY: ${{ secrets.MINIO_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2
      - name: install minio ..
        run: |
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          mv mc /usr/bin/mc
          mc config host add minio $MINIO_S3_ENDPOINT $MINIO_ACCESS_KEY_ID $MINIO_SECRET_ACCESS_KEY --api S3v4
          apt update
          apt install -y postgresql-client-common postgresql-client

      - name: process CAMA
        shell: bash
        run: |
          DATE=$(date "+%Y/%m/%d")
          TABLE_NAME="pluto_input_cama_dof"

          # create temporary location
          mkdir -p /tmp/cama && (cd /tmp/cama
              # copy to directory
              mc cp minio/cama/CAMA.txt $TABLE_NAME.txt
              
              # # add colum nme
              sed -i 1i"BBL|PARCELCARD|BLDGNUM|BLDGCLASS|PRIMARYUSECODE|DEVELOPMENTNAME|STREETTYPE|LOTTYPE|RESIDAREA|OFFICEAREA|RETAILAREA|GARAGEAREA|STORAGEAREA|FACTORYAREA|OTHERAREA|GROSSAREA|OWNERAREA|GROSSVOLUME|COMMERCIALAREA|PROXCODE|BSMNT_TYPE|BSMNTGRADIENT|BSMNTAREA|FIRSTFLOORAREA|SECONDFLOORAREA|UPPERFLOORAREA|PARTRESFLOORAREA|UNFINISHEDFLOORAREA|FINISHEDFLOORAREA|NONRESIDFLOORAREA|RESIDCONSTRTYPE|COMMERCIALCONSTRTYPE|CONDOMAINCONSTRTYPE|CONDOUNITSCONSTRTYPE" $TABLE_NAME.txt
              
              # # Check number of rows
              wc -l $TABLE_NAME.txt

              # # Check number of columns
              awk -F'|' '{print NF; exit}' $TABLE_NAME.txt

              # # Load to psql
              sed -i 's/\r$//g' $TABLE_NAME.txt
              sed -i 's/\"//g' $TABLE_NAME.txt

              psql $RECIPE_ENGINE -c "CREATE SCHEMA IF NOT EXISTS $TABLE_NAME;"
              psql $RECIPE_ENGINE -c "DROP TABLE IF EXISTS $TABLE_NAME.\"$DATE\" CASCADE;"
              psql $RECIPE_ENGINE -c "CREATE TABLE $TABLE_NAME.\"$DATE\" ( BBL text, PARCELCARD text, BLDGNUM text, BLDGCLASS text, PRIMARYUSECODE text, DEVELOPMENTNAME text, STREETTYPE text, LOTTYPE text, RESIDAREA text, OFFICEAREA text, RETAILAREA text, GARAGEAREA text, STORAGEAREA text, FACTORYAREA text, OTHERAREA text, GROSSAREA text, OWNERAREA text, GROSSVOLUME text, COMMERCIALAREA text, PROXCODE text, BSMNT_TYPE text, BSMNTGRADIENT text, BSMNTAREA text, FIRSTFLOORAREA text, SECONDFLOORAREA text, UPPERFLOORAREA text, PARTRESFLOORAREA text, UNFINISHEDFLOORAREA text, FINISHEDFLOORAREA text, NONRESIDFLOORAREA text, RESIDCONSTRTYPE text, COMMERCIALCONSTRTYPE text, CONDOMAINCONSTRTYPE text, CONDOUNITSCONSTRTYPE text );"
              psql $RECIPE_ENGINE -c "\COPY $TABLE_NAME.\"$DATE\" FROM '$TABLE_NAME.txt' WITH NULL AS '' DELIMITER '|' CSV HEADER;"
              psql $RECIPE_ENGINE -c "DROP VIEW IF EXISTS $TABLE_NAME.latest;"
              psql $RECIPE_ENGINE -c "CREATE VIEW $TABLE_NAME.latest as (SELECT '$DATE' as v, * FROM $TABLE_NAME.\"$DATE\")";
            )
                        
      - name: Comment on Issue and Close Issue
        if: success()
        uses: peter-evans/close-issue@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## ${{ github.event.issue.title }} Is Successfully Updated! ðŸŽ‰
            
            ### More Info
            for more details, check https://github.com/NYCPlanning/db-pluto/actions/runs/${{ github.run_id }}
          
          reactions: laugh, rocket, hooray
