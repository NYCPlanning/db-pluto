name: CI

on: [push]

jobs:
  skip:
    name: Build and test
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[build]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"
  build:
    needs: skip
    runs-on:  ubuntu-latest
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      BUILD_ENGINE: ${{ secrets.BUILD_ENGINE }}
      EDM_DATA: ${{ secrets.EDM_DATA }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          sudo apt update
          sudo apt install -y curl zip
          sudo tee /etc/apt/sources.list.d/pgdg.list <<END
          deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
          END
          # get the signing key and import it
          curl -O https://www.postgresql.org/media/keys/ACCC4CF8.asc
          sudo apt-key add ACCC4CF8.asc
          sudo apt update
          sudo apt install -y postgresql-client-11 postgis
          sudo apt autoremove

          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc config host add spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4
      - name: dataloading ..
        working-directory: pluto_build
        shell: bash
        run: |
          ./01_dataloading.sh
      - name: building ...
        working-directory: pluto_build
        shell: bash
        run: |
          ./02_build.sh
      - name: apply corrections
        shell: bash
        working-directory: pluto_build
        run: | 
          ./03_corrections.sh
      - name: Archive and QAQC
        shell: bash
        working-directory: pluto_build
        run: |
          mkdir -p output
          ./04_archive.sh
      - name: create shapefile
        working-directory: pluto_build
        shell: bash
        run: |
          ./05_export.sh
